#Added NMR groups as factors
#Added separate alphas for each output
#Adding separate deltas for each output 
model{  
      #niso - number of countries
      for(c in 1:niso){
      # data
      	
	#n.c is the number of observations within the countries
	for (i in 1:n.c[c]){

	#y is the logit(rate) of VN types
	y.ci[c,i,1]~dnorm(p[c,gett.ci[c,i],1]-bias[source.ci[c,i], 1], se1[c,i]) #preterm_sga/preterm 
	y.ci[c,i,2]~dnorm(p[c,gett.ci[c,i],2]-bias[source.ci[c,i], 2], se2[c,i]) #term_sga/term
	
	se1[c,i]<-pow((n1[c,i]^2+sigma.y[source.ci[c,i], 1]^2), -1)
	se2[c,i]<-pow((n2[c,i]^2+sigma.y[source.ci[c,i], 2]^2), -1)
	

	} #end of n.c
              

        # mean value
	# nyears.c is number of years to estimate for each country - 11.
        for(t in 1:nyears.c[c]){
 	
 	#Option: write out separately covariates to make sure its working
	#mu.ct[c,t]: average logit LBW rate for country c at time t.
	#Spline coefficients:
	#Z.tk: Cubic spline term: H=3, time x H
	#delta: H x number of countries
	
	p[c,t,1]<-beta.d[c, 1] + inprod(Z.tk[t,], delta.hc[,c,1])
	p[c,t,2]<-beta.d[c, 2] + inprod(Z.tk[t,], delta.hc[,c,2])
	
	preterm[c,t]<-covar_array[1,c,t]

	q[c,t,1]<-ilogit(p[c,t,1])*(preterm[c,t]/100) #PT_SGA
	q[c,t,2]<-(1-ilogit(p[c,t,1]))*(preterm[c,t]/100) #PT_NSGA
	q[c,t,3]<-ilogit(p[c,t,2])*(1-(preterm[c,t]/100)) #T_SGA
	q[c,t,4]<-(1-ilogit(p[c,t,2]))*(1-(preterm[c,t]/100)) #T_NSGA
	

	} # end t
        
	#Non-informative priors for the country-specific element of the time element
	for (m in 1:2){
          for (h in 1:H){
            delta.hc[h,c,m] ~ dnorm(0, tau.delta[m])
          }
	}

	#Non-informative priors for country-specific intercepts	
	beta.d[c,1] ~ dnorm(mu.beta[region.c[c],1], tau.beta[region.c[c],1])
	beta.d[c,2] ~ dnorm(mu.beta[region.c[c],2], tau.beta[region.c[c],2]) 
  
        } #end iso

	#Non-informative prior on country-specific time
	for (m in 1:2){
	tau.delta[m]~ dunif(0,3)	
	
	#Non-informative priors for regional intercept
        for(r in 1:nregions){ 
          mu.beta[r,m] ~ dnorm(mu.beta.global[m], tau.beta.global[m])
          tau.beta[r,m] <- pow(sigma.beta[r,m], -2)
          sigma.beta[r,m] ~ dunif(0, 40)
	}

        mu.beta.global[m] ~ dnorm(0, 0.01)
        tau.beta.global[m] <- pow(sigma.beta.global[m], -2)
        sigma.beta.global[m] ~ dunif(0, 40)

	#Bias terms for the differing sources
 	bias[1, m]<-0
	bias[2, m]<-0

	} #end m
	#Admins
	sigma.y[1, 1]<-0.58*8 #preterm
 	sigma.y[1, 2]<-0.39   #term
	
	#Studies
	sigma.y[2, 1]<-sigma.y[1,1]*2.6#preterm
	sigma.y[2, 2]<-0.46 #term


} # end model 
